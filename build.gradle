plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.cordilleracoffee'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudAzureVersion', "5.21.0")
}

dependencies {

	// Utilities
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.6.3'

	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	// Cloud
	implementation 'com.azure.spring:spring-cloud-azure-starter-actuator'
	implementation 'com.azure.spring:spring-cloud-azure-starter-storage'

	// Messaging
	implementation 'org.springframework.kafka:spring-kafka'

	// Persistence
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	// Docker
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly 'com.azure.spring:spring-cloud-azure-docker-compose'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'com.redis:testcontainers-redis:2.2.2'
	testImplementation 'com.azure.spring:spring-cloud-azure-testcontainers'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
